{"version":3,"sources":["images/shape.svg","components/Menu.js","components/Topbar.js","components/Main.js","components/ScrollTop.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","label","pathname","logo","require","Topbar","state","value","menuDrawer","handleChange","event","_this","setState","mobileMenuOpen","mobileMenuClose","current","props","currentPath","window","scrollTo","_this2","this","classes","react_default","a","createElement","AppBar_default","position","color","className","appBar","Toolbar_default","Grid_default","container","spacing","alignItems","item","xs","flex","inline","Typography_default","variant","noWrap","Link","to","link","width","src","alt","tagline","noTabs","Fragment","iconContainer","IconButton_default","onClick","iconButton","aria-label","Menu_default","tabContainer","SwipeableDrawer_default","anchor","open","onClose","onOpen","title","List_default","map","index","ListItem_default","component","search","location","button","key","ListItemText_default","primary","Tabs_default","indicatorColor","textColor","onChange","Tab_default","root","tabItem","Component","withRouter","withStyles","theme","boxShadow","borderBottom","concat","palette","grey","backgroundColor","display","Object","defineProperty","breakpoints","down","justifyContent","textDecoration","productLogo","borderLeft","marginLeft","paddingLeft","up","paddingTop","float","paddingBottom","minWidth","backgroundShape","Main","console","scripts","edit","content","create","outputs","toggleDrawer","side","handleClickOpen","handleClose","val","handleSave","_callee","_this$state","regenerator_default","wrap","_context","prev","next","swal","text","icon","dangerMode","sent","abrupt","Func","invoke","objectSpread","isCreate","then","rsp","catch","error","stop","handleRun","name","script","unshift","data","handleClean","handleEdit","_callee2","_context2","t0","handleDelete","_callee3","_context3","_this3","_this$state2","CssBaseline_default","components_Topbar","Dialog_default","fullWidth","maxWidth","aria-labelledby","DialogTitle_default","id","DialogContent_default","TextField_default","autoFocus","margin","disabled","e","target","type","DialogContentText_default","multiline","rows","DialogActions_default","Button_default","justify","grid","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","_map","row","scope","PlayArrow_default","fontSize","BorderColor_default","Delete_default","Fab_default","classNames","fab","fabGreen","KeyboardArrowUp_default","tabIndex","role","consoleClose","size","consoleContent","output","flexGrow","overflow","background","backgroundSize","backgroundPosition","marginTop","padding","bottom","unit","right","common","white","green","&:hover","top","maxHeight","minHeight","overflowY","ScrollToTop","prevProps","children","routes","HashRouter","ScrollTop","Switch","Route","exact","path","init","appkey","masterKey","endpoint","createMuiTheme","secondary","main","blue","indigo","typography","useNextVariants","fontFamily","join","App","core_styles","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bac49c77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shape.208f3d38.svg\";","const Menu = [\n  {\n    label: \"Shell-Scripts\",\n    pathname: \"/\"\n  },\n  // {\n  //   label: \"Console\",\n  //   pathname: \"/dashboard\"\n  // }\n\n];\n\nexport default Menu;","import React,  { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link, withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Menu from './Menu';\n\nconst logo = require('../images/shape.svg');\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.grey['100']}`,\n    backgroundColor: 'white',\n\n  },\n  inline: {\n    display: 'inline'\n  },\n  flex: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  productLogo: {\n    display: 'inline-block',\n    borderLeft: `1px solid ${theme.palette.grey['A100']}`,\n    marginLeft: 32,\n    paddingLeft: 24,\n    [theme.breakpoints.up('md')]: {\n      paddingTop: '1.5em'\n    }\n  },\n  tagline: {\n    display: 'inline-block',\n    marginLeft: 10,\n    [theme.breakpoints.up('md')]: {\n      paddingTop: '0.8em'\n    }\n  },\n  iconContainer: {\n    display: 'none',\n    [theme.breakpoints.down('sm')]: {\n      display: 'block'\n    }\n  },\n  iconButton: {\n    float: 'right'\n  },\n  tabContainer: {\n    marginLeft: 32,\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  },\n  tabItem: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    minWidth: 'auto'\n  }\n})\n\nclass Topbar extends Component {\n\n  state = {\n    value: 0,\n    menuDrawer: false\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  mobileMenuOpen = (event) => {\n    this.setState({ menuDrawer: true });\n  }\n\n  mobileMenuClose = (event) => {\n    this.setState({ menuDrawer: false });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  current = () => {\n    if(this.props.currentPath === '/home') {\n      return 0\n    }\n    if(this.props.currentPath === '/dashboard') {\n      return 1\n    }\n    if(this.props.currentPath === '/signup') {\n      return 2\n    }\n    if(this.props.currentPath === '/wizard') {\n      return 3\n    }\n    if(this.props.currentPath === '/cards') {\n      return 4\n    }\n\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n            <Grid container spacing={24} alignItems=\"baseline\">\n              <Grid item xs={12} className={classes.flex}>\n                  <div className={classes.inline}>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                      <Link to='/' className={classes.link}>\n                        <img width={20} src={logo} alt=\"\" />\n                        <span className={classes.tagline}>Console Manager</span>\n                      </Link>\n                    </Typography>\n                  </div>\n                  { !this.props.noTabs && (\n                    <React.Fragment>\n                      <div className={classes.iconContainer}>\n                        <IconButton onClick={this.mobileMenuOpen} className={classes.iconButton} color=\"inherit\" aria-label=\"Menu\">\n                          <MenuIcon />\n                        </IconButton>\n                      </div>\n                      <div className={classes.tabContainer}>\n                        <SwipeableDrawer anchor=\"right\" open={this.state.menuDrawer} onClose={this.mobileMenuClose} onOpen={this.mobileMenuOpen}>\n                          <AppBar title=\"Menu\" />\n                          <List>\n                            {Menu.map((item, index) => (\n                              <ListItem component={Link} to={{pathname: item.pathname, search: this.props.location.search}} button key={item.label}>\n                                <ListItemText primary={item.label} />\n                              </ListItem>\n                            ))}\n                          </List>\n                        </SwipeableDrawer>\n                        <Tabs\n                          value={this.current() || this.state.value}\n                          indicatorColor=\"primary\"\n                          textColor=\"primary\"\n                          onChange={this.handleChange}\n                        >\n                          {Menu.map((item, index) => (\n                            <Tab key={index} component={Link} to={{pathname: item.pathname, search: this.props.location.search}} classes={{root: classes.tabItem}} label={item.label} />\n                          ))}\n                        </Tabs>\n                      </div>\n                    </React.Fragment>\n                  )}\n              </Grid>\n            </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Topbar))\n","import React,  { Component } from 'react';\nimport _map from 'lodash/map';\nimport swal from '@sweetalert/with-react'\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Topbar from './Topbar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport RunIcon from '@material-ui/icons/PlayArrow';\nimport EditIcon from '@material-ui/icons/BorderColor';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nimport classNames from 'classnames';\nimport Fab from '@material-ui/core/Fab';\n\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport green from '@material-ui/core/colors/green';\n\nimport { Func } from 'fpmc-jssdk';\n\nconst backgroundShape = require('../images/shape.svg');\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['A500'],\n    overflow: 'hidden',\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    marginTop: 20,\n    padding: 20,\n    paddingBottom: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n  consoleClose: {\n    position: 'absolute',\n    top: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  console: {\n    // height: 400,\n    padding: 10,\n  },\n  consoleContent: {\n    maxHeight: 600,\n    minHeight: 200,\n    overflowY: 'auto',\n  },\n  grid: {\n    width: 1000\n  },\n  table: {\n    minWidth: 700,\n  },\n})\nclass Main extends Component {\n\n  state = {\n    open: false,\n    console: false,\n    scripts: {},\n    edit: { \n      title: '***.sh',\n      content: '# /sh/bin\\necho \"oooops\"',\n    },\n    create: true,\n    outputs: [\n      'success',\n      '0'\n    ]\n  };\n\n  componentDidMount() {\n    const scripts = {};\n    new Func('scripts.list')\n      .invoke()\n      .then(data => {\n        data.map( item => {\n          scripts[item] = ''\n        })\n        this.setState({ scripts });\n      })\n\n  }\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open,\n    });\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = (key ,val) => {\n    const { edit } = this.state;\n    edit[key] = val;\n    this.setState({ edit })\n  }\n\n  handleSave = async () => {\n    const sure = await swal({\n      title: \"Are you sure?\",\n      text: \"Are you sure that you want to save this file?\",\n      icon: \"warning\",\n      dangerMode: true,\n    });\n    if(!sure){ return; }\n    const { create, edit } = this.state;\n    this.setState({ open: false });\n    new Func('scripts.save')\n      .invoke({\n        isCreate: create,\n        ...edit\n      })\n      .then(rsp => {\n        const { scripts } = this.state;\n        scripts[edit.title] = '';\n        this.setState({ scripts })\n      })\n      .catch(error => {\n        console.error(error);\n        swal(\"Oops!\", \"Something went wrong!\", \"error\");\n      })\n  };\n\n  handleRun = (name) => {\n    const { outputs } = this.state;\n    this.setState({\n      console: true,\n    })\n    new Func('scripts.run')\n      .invoke({\n        script: name,\n      })\n      .then(rsp => {\n        outputs.unshift(rsp.data)\n        this.setState({ outputs })\n      })\n      .catch(error => {\n        console.error(error);\n        swal(\"Oops!\", \"Something went wrong!\", \"error\");\n      })\n      \n  }\n\n  handleClean = () => {\n    this.setState({\n      outputs: []\n    })\n  }\n\n  handleEdit = async (name) => {\n    try {\n      const rsp = await new Func('scripts.get').invoke({ script: name })\n      this.setState({\n        create: false,\n        open: true,\n        edit: {\n          title: name,\n          content: rsp\n        }\n      })\n    } catch (error) {\n      console.error(error);\n      swal(\"Oops!\", \"Something went wrong!\", \"error\");\n    }\n    \n  }\n\n  handleDelete = async(name) => {\n    const willDelete = await swal({\n      title: \"Are you sure?\",\n      text: \"Are you sure that you want to delete this file?\",\n      icon: \"warning\",\n      dangerMode: true,\n    });\n    if(willDelete){\n      new Func('scripts.delete')\n        .invoke({\n          script: name\n        })\n        .then(rsp =>{\n          const { scripts } = this.state;\n          delete scripts[name];\n          this.setState( { scripts })\n        })\n        .catch(error => {\n          console.error(error);\n          swal(\"Oops!\", \"Something went wrong!\", \"error\");\n        })\n    }\n    \n  }\n  render() {\n    const { classes } = this.props;\n    const { outputs, create, scripts } = this.state;\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar />\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth={ true }\n          maxWidth={ 'sm'}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Shell Editor</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              disabled={ !create }\n              onChange={ (e) => this.handleChange('title', e.target.value) }\n              id=\"name\"\n              value={this.state.edit.title}\n              label=\"Script Title\"\n              type=\"text\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <DialogContentText>\n              Edit the shell script file.\n            </DialogContentText>\n            <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              onChange={ (e) => this.handleChange('content', e.target.value) }\n              multiline\n              value={this.state.edit.content}\n              rows=\"10\"\n              id=\"name\"\n              label=\"Script Content\"\n              type=\"text\"\n              fullWidth\n            />\n\n\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSave} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <div className={classes.root}>\n          <Grid container justify=\"center\"> \n            <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n              <Grid item xs={12}>\n                <div>\n                  <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={ this.handleClickOpen }>Create</Button>\n                </div>\n                <Paper className={classes.root}>\n                  <Table className={classes.table}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Shell Name</TableCell>\n                        <TableCell align=\"right\">Operation</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      { _map(scripts, (row, name) => {\n                        return <TableRow key={ `script-${name}` }>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {name}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <IconButton color=\"secondary\" aria-label=\"Run\" className={classes.margin} onClick={ () => this.handleRun(name) }>\n                              <RunIcon fontSize=\"small\" color=\"action\"/>\n                            </IconButton>\n                            <IconButton color=\"secondary\" aria-label=\"Edit\" className={classes.margin} onClick={ () => this.handleEdit(name) }>\n                              <EditIcon fontSize=\"small\" color=\"secondary\" />\n                            </IconButton>\n                            <IconButton color=\"secondary\" aria-label=\"Delete\" className={classes.margin} onClick={ () => this.handleDelete(name) }>\n                              <DeleteIcon fontSize=\"small\" color=\"error\" />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                      })\n                    }\n                    </TableBody>\n                  </Table>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      \n        <Fab className={ classNames(classes.fab, classes.fabGreen) } color=\"primary\"\n          onClick={ this.toggleDrawer('console', true) }\n        >\n          { <UpIcon />}\n        </Fab>\n        <SwipeableDrawer\n          anchor=\"bottom\"\n          open={this.state.console}\n          onOpen={ this.toggleDrawer('console', true) }\n          onClose={ this.toggleDrawer('console', false)  }\n        >\n          <div\n            tabIndex={0}\n            role=\"button\"\n            className={ classes.console }\n            // onClick={this.toggleDrawer('console', false)}\n            // onKeyDown={this.toggleDrawer('console', false)}\n            \n          >\n            {/* <Fab className={ classes.consoleClose } onClick={ this.toggleDrawer('console', false) }>\n              <DownIcon />\n            </Fab> */}\n            <div className={ classes.consoleClose } >\n              <Button size=\"small\" className={classes.margin} onClick={ this.handleClean }>\n                Clean\n              </Button>\n              <Button size=\"small\" color=\"secondary\" className={classes.margin} onClick={ this.toggleDrawer('console', false) }>\n                x\n              </Button>\n            </div>\n            <h3>Console</h3>\n            <div className= { classes.consoleContent }>\n              {\n                outputs.map( (output, index) => {\n                  return (\n                    <pre key={`output-${index}`}>\n                      {output}\n                    </pre>\n                  )\n                })\n              }\n              \n            </div>\n          </div>\n        </SwipeableDrawer>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(Main);\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location.pathname !== prevProps.location.pathname) {\n        window.scrollTo(0, 0);\n      }\n    }\n\n    render() {\n      return this.props.children;\n    }\n  }\n\n  export default withRouter(ScrollToTop);\n","import React from 'react'\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport Main from './components/Main'\nimport ScrollToTop from './components/ScrollTop'\n\nexport default props => (\n    <HashRouter>\n      <ScrollToTop>\n        <Switch>\n          <Route exact path='/' component={ Main } />\n        </Switch>\n      </ScrollToTop>\n    </HashRouter>\n  )","import React, { Component } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './App.css';\nimport Routes from './routes'\nimport { blue, indigo } from '@material-ui/core/colors'\nimport { init } from 'fpmc-jssdk';\n\ninit({ appkey:'123123', masterKey:'123123', endpoint: '/api' });\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: blue[900]\n    },\n    primary: {\n      main: indigo[700]\n    }\n  },\n  typography: {\n    useNextVariants: true,\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  }\n});\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider theme={theme}>\n          <Routes />\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}